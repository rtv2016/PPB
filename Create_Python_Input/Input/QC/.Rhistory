setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input")
ToxCast_192<- read.csv("toxcast_test_192_Phase_II.csv")
#ToxCast_MOE<- read.csv("ToxCast_MOE.csv") # Used for AER
Exponent_MOE <-read.csv("rtv_083019_2.csv") # Used for Exponent
SVMvars  <- c("logS","VAdjEq","PEOE_VSA_FPPOS","SlogP","a_nS","a_base",
"a_nN","SlogP_VSA6","logP.o.w.","PEOE_VSA_FPOL")
RFvars  <- c("logS","logP.o.w.","SlogP","PEOE_VSA_FPPOS","GCUT_SMR_0",
"BCUT_SLOGP_0","GCUT_PEOE_0","GCUT_PEOE_1","GCUT_SLOGP_0","PEOE_VSA_PPOS")
myvars <- union(SVMvars,RFvars)
#2 Exponent
headers <- colnames(ToxCast_192)
columns <- ncol(ToxCast_192)
rows    <- nrow(Exponent_MOE)
template <- mat.or.vec(rows, columns)
colnames(template) <- headers
dftemplate <- as.data.frame(template)
dftemplate$ID.     <- Exponent_MOE$ID.
dftemplate$SMILES  <- Exponent_MOE$SMILES
dftemplate$Fub    <- 0.0
dftemplate$CAS     <- Exponent_MOE$CAS
dftemplate$Name   <- Exponent_MOE$Name
#descriptors
dftemplate$logS           <- Exponent_MOE$logS
dftemplate$VAdjEq         <- Exponent_MOE$VAdjEq
dftemplate$PEOE_VSA_FPPOS <- Exponent_MOE$PEOE_VSA_FPPOS
dftemplate$SlogP          <- Exponent_MOE$SlogP
dftemplate$a_nS           <- Exponent_MOE$a_nS
dftemplate$a_base         <- Exponent_MOE$a_base
dftemplate$a_nN           <- Exponent_MOE$a_nN
dftemplate$SlogP_VSA6     <- Exponent_MOE$SlogP_VSA6
dftemplate$logP.o.w.      <- Exponent_MOE$logP.o.w.
dftemplate$PEOE_VSA_FPOL  <- Exponent_MOE$PEOE_VSA_FPOL
dftemplate$GCUT_SMR_0     <- Exponent_MOE$GCUT_SMR_0
dftemplate$BCUT_SLOGP_0   <- Exponent_MOE$BCUT_SLOGP_0
dftemplate$GCUT_PEOE_0    <- Exponent_MOE$GCUT_PEOE_0
dftemplate$GCUT_PEOE_1    <- Exponent_MOE$GCUT_PEOE_1
dftemplate$GCUT_SLOGP_0   <- Exponent_MOE$GCUT_SLOGP_0
dftemplate$PEOE_VSA_PPOS  <- Exponent_MOE$PEOE_VSA_PPOS
dftemplate <- rename(dftemplate, c("ID." = "ID#"))
dftemplate <- rename(dftemplate, c("logP.o.w." = "logP(o/w)"))
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input/Exponent")
write.csv(dftemplate,"toxcast_test_192_Phase_II.csv",row.names=FALSE)
library(plyr)
headers <- colnames(ToxCast_192)
columns <- ncol(ToxCast_192)
rows    <- nrow(Exponent_MOE)
template <- mat.or.vec(rows, columns)
colnames(template) <- headers
dftemplate <- as.data.frame(template)
dftemplate$ID.     <- Exponent_MOE$ID.
dftemplate$SMILES  <- Exponent_MOE$SMILES
dftemplate$Fub    <- 0.0
dftemplate$CAS     <- Exponent_MOE$CAS
dftemplate$Name   <- Exponent_MOE$Name
#descriptors
dftemplate$logS           <- Exponent_MOE$logS
dftemplate$VAdjEq         <- Exponent_MOE$VAdjEq
dftemplate$PEOE_VSA_FPPOS <- Exponent_MOE$PEOE_VSA_FPPOS
dftemplate$SlogP          <- Exponent_MOE$SlogP
dftemplate$a_nS           <- Exponent_MOE$a_nS
dftemplate$a_base         <- Exponent_MOE$a_base
dftemplate$a_nN           <- Exponent_MOE$a_nN
dftemplate$SlogP_VSA6     <- Exponent_MOE$SlogP_VSA6
dftemplate$logP.o.w.      <- Exponent_MOE$logP.o.w.
dftemplate$PEOE_VSA_FPOL  <- Exponent_MOE$PEOE_VSA_FPOL
dftemplate$GCUT_SMR_0     <- Exponent_MOE$GCUT_SMR_0
dftemplate$BCUT_SLOGP_0   <- Exponent_MOE$BCUT_SLOGP_0
dftemplate$GCUT_PEOE_0    <- Exponent_MOE$GCUT_PEOE_0
dftemplate$GCUT_PEOE_1    <- Exponent_MOE$GCUT_PEOE_1
dftemplate$GCUT_SLOGP_0   <- Exponent_MOE$GCUT_SLOGP_0
dftemplate$PEOE_VSA_PPOS  <- Exponent_MOE$PEOE_VSA_PPOS
dftemplate <- rename(dftemplate, c("ID." = "ID#"))
dftemplate <- rename(dftemplate, c("logP.o.w." = "logP(o/w)"))
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input/Exponent")
write.csv(dftemplate,"toxcast_test_192_Phase_II.csv",row.names=FALSE)
View(Exponent_MOE)
View(Exponent_MOE)
View(dftemplate)
library(plyr)
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input")
ToxCast_192<- read.csv("toxcast_test_192_Phase_II.csv")
#ToxCast_MOE<- read.csv("ToxCast_MOE.csv") # Used for AER
Exponent_MOE <-read.csv("rtv_083019_2.csv") # Used for Exponent
SVMvars  <- c("logS","VAdjEq","PEOE_VSA_FPPOS","SlogP","a_nS","a_base",
"a_nN","SlogP_VSA6","logP.o.w.","PEOE_VSA_FPOL")
RFvars  <- c("logS","logP.o.w.","SlogP","PEOE_VSA_FPPOS","GCUT_SMR_0",
"BCUT_SLOGP_0","GCUT_PEOE_0","GCUT_PEOE_1","GCUT_SLOGP_0","PEOE_VSA_PPOS")
myvars <- union(SVMvars,RFvars)
getwd()
headers <- colnames(ToxCast_192)
columns <- ncol(ToxCast_192)
rows    <- nrow(Exponent_MOE)
template <- mat.or.vec(rows, columns)
colnames(template) <- headers
dftemplate <- as.data.frame(template)
View(dftemplate)
library(plyr)
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input")
ToxCast_192<- read.csv("toxcast_test_192_Phase_II.csv")
#ToxCast_MOE<- read.csv("ToxCast_MOE.csv") # Used for AER
Exponent_MOE <-read.csv("rtv_083019_2.csv") # Used for Exponent
SVMvars  <- c("logS","VAdjEq","PEOE_VSA_FPPOS","SlogP","a_nS","a_base",
"a_nN","SlogP_VSA6","logP.o.w.","PEOE_VSA_FPOL")
RFvars  <- c("logS","logP.o.w.","SlogP","PEOE_VSA_FPPOS","GCUT_SMR_0",
"BCUT_SLOGP_0","GCUT_PEOE_0","GCUT_PEOE_1","GCUT_SLOGP_0","PEOE_VSA_PPOS")
myvars <- union(SVMvars,RFvars)
headers <- colnames(ToxCast_192)
columns <- ncol(ToxCast_192)
rows    <- nrow(Exponent_MOE)
template <- mat.or.vec(rows, columns)
colnames(template) <- headers
dftemplate <- as.data.frame(template)
dftemplate$ID.     <- Exponent_MOE$ID.
dftemplate$SMILES  <- Exponent_MOE$SMILES
dftemplate$Fub    <- 0.0
dftemplate$CAS     <- Exponent_MOE$CAS
dftemplate$Name   <- Exponent_MOE$Name
#descriptors
dftemplate$logS           <- Exponent_MOE$logS
dftemplate$VAdjEq         <- Exponent_MOE$VAdjEq
dftemplate$PEOE_VSA_FPPOS <- Exponent_MOE$PEOE_VSA_FPPOS
dftemplate$SlogP          <- Exponent_MOE$SlogP
dftemplate$a_nS           <- Exponent_MOE$a_nS
dftemplate$a_base         <- Exponent_MOE$a_base
dftemplate$a_nN           <- Exponent_MOE$a_nN
dftemplate$SlogP_VSA6     <- Exponent_MOE$SlogP_VSA6
dftemplate$logP.o.w.      <- Exponent_MOE$logP.o.w.
dftemplate$PEOE_VSA_FPOL  <- Exponent_MOE$PEOE_VSA_FPOL
dftemplate$GCUT_SMR_0     <- Exponent_MOE$GCUT_SMR_0
dftemplate$BCUT_SLOGP_0   <- Exponent_MOE$BCUT_SLOGP_0
dftemplate$GCUT_PEOE_0    <- Exponent_MOE$GCUT_PEOE_0
dftemplate$GCUT_PEOE_1    <- Exponent_MOE$GCUT_PEOE_1
dftemplate$GCUT_SLOGP_0   <- Exponent_MOE$GCUT_SLOGP_0
dftemplate$PEOE_VSA_PPOS  <- Exponent_MOE$PEOE_VSA_PPOS
dftemplate <- rename(dftemplate, c("ID." = "ID#"))
dftemplate <- rename(dftemplate, c("logP.o.w." = "logP(o/w)"))
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input/Exponent")
write.csv(dftemplate,"toxcast_test_192_Phase_II.csv",row.names=FALSE)
getwd()
headers <- colnames(ToxCast_192)
columns <- ncol(ToxCast_192)
rows    <- nrow(Exponent_MOE)
template <- mat.or.vec(rows, columns)
colnames(template) <- headers
dftemplate <- as.data.frame(template)
dftemplate$ID.     <- Exponent_MOE$ID.
dftemplate$SMILES  <- Exponent_MOE$SMILES
dftemplate$Fub    <- 0.0
dftemplate$CAS     <- Exponent_MOE$CAS
dftemplate$Name   <- Exponent_MOE$Name
#descriptors
dftemplate$logS           <- Exponent_MOE$logS
dftemplate$VAdjEq         <- Exponent_MOE$VAdjEq
dftemplate$PEOE_VSA_FPPOS <- Exponent_MOE$PEOE_VSA_FPPOS
dftemplate$SlogP          <- Exponent_MOE$SlogP
dftemplate$a_nS           <- Exponent_MOE$a_nS
dftemplate$a_base         <- Exponent_MOE$a_base
dftemplate$a_nN           <- Exponent_MOE$a_nN
dftemplate$SlogP_VSA6     <- Exponent_MOE$SlogP_VSA6
dftemplate$logP.o.w.      <- Exponent_MOE$logP.o.w.
dftemplate$PEOE_VSA_FPOL  <- Exponent_MOE$PEOE_VSA_FPOL
dftemplate$GCUT_SMR_0     <- Exponent_MOE$GCUT_SMR_0
dftemplate$BCUT_SLOGP_0   <- Exponent_MOE$BCUT_SLOGP_0
dftemplate$GCUT_PEOE_0    <- Exponent_MOE$GCUT_PEOE_0
dftemplate$GCUT_PEOE_1    <- Exponent_MOE$GCUT_PEOE_1
dftemplate$GCUT_SLOGP_0   <- Exponent_MOE$GCUT_SLOGP_0
dftemplate$PEOE_VSA_PPOS  <- Exponent_MOE$PEOE_VSA_PPOS
dftemplate <- rename(dftemplate, c("ID." = "ID#"))
dftemplate <- rename(dftemplate, c("logP.o.w." = "logP(o/w)"))
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input/Exponent")
write.csv(dftemplate,"toxcast_test_192_Phase_II.csv",row.names=FALSE)
View(Exponent_MOE)
View(dftemplate)
library(plyr)
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input")
ToxCast_192<- read.csv("toxcast_test_192_Phase_II.csv")
#ToxCast_MOE<- read.csv("ToxCast_MOE.csv") # Used for AER
Exponent_MOE <-read.csv("rtv_083019_2.csv") # Used for Exponent
View(ToxCast_192)
library(plyr)
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input")
ToxCast_192<- read.csv("toxcast_test_192_Phase_II.csv")
#ToxCast_MOE<- read.csv("ToxCast_MOE.csv") # Used for AER
Exponent_MOE <-read.csv("rtv_083019_2.csv") # Used for Exponent
SVMvars  <- c("logS","VAdjEq","PEOE_VSA_FPPOS","SlogP","a_nS","a_base",
"a_nN","SlogP_VSA6","logP.o.w.","PEOE_VSA_FPOL")
RFvars  <- c("logS","logP.o.w.","SlogP","PEOE_VSA_FPPOS","GCUT_SMR_0",
"BCUT_SLOGP_0","GCUT_PEOE_0","GCUT_PEOE_1","GCUT_SLOGP_0","PEOE_VSA_PPOS")
myvars <- union(SVMvars,RFvars)
headers <- colnames(ToxCast_192)
columns <- ncol(ToxCast_192)
rows    <- nrow(Exponent_MOE)
template <- mat.or.vec(rows, columns)
colnames(template) <- headers
dftemplate <- as.data.frame(template)
dftemplate$ID.     <- Exponent_MOE$ID.
dftemplate$SMILES  <- Exponent_MOE$SMILES
dftemplate$Fub    <- 0.0
dftemplate$CAS     <- Exponent_MOE$CAS
dftemplate$Name   <- Exponent_MOE$Name
#descriptors
dftemplate$logS           <- Exponent_MOE$logS
dftemplate$VAdjEq         <- Exponent_MOE$VAdjEq
dftemplate$PEOE_VSA_FPPOS <- Exponent_MOE$PEOE_VSA_FPPOS
dftemplate$SlogP          <- Exponent_MOE$SlogP
dftemplate$a_nS           <- Exponent_MOE$a_nS
dftemplate$a_base         <- Exponent_MOE$a_base
dftemplate$a_nN           <- Exponent_MOE$a_nN
dftemplate$SlogP_VSA6     <- Exponent_MOE$SlogP_VSA6
dftemplate$logP.o.w.      <- Exponent_MOE$logP.o.w.
dftemplate$PEOE_VSA_FPOL  <- Exponent_MOE$PEOE_VSA_FPOL
dftemplate$GCUT_SMR_0     <- Exponent_MOE$GCUT_SMR_0
dftemplate$BCUT_SLOGP_0   <- Exponent_MOE$BCUT_SLOGP_0
dftemplate$GCUT_PEOE_0    <- Exponent_MOE$GCUT_PEOE_0
dftemplate$GCUT_PEOE_1    <- Exponent_MOE$GCUT_PEOE_1
dftemplate$GCUT_SLOGP_0   <- Exponent_MOE$GCUT_SLOGP_0
dftemplate$PEOE_VSA_PPOS  <- Exponent_MOE$PEOE_VSA_PPOS
dftemplate <- rename(dftemplate, c("ID." = "ID#"))
dftemplate <- rename(dftemplate, c("logP.o.w." = "logP(o/w)"))
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input/Exponent")
write.csv(dftemplate,"toxcast_test_192_Phase_II.csv",row.names=FALSE)
library(plyr)
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input")
ToxCast_192<- read.csv("toxcast_test_192_Phase_II.csv")
#ToxCast_MOE<- read.csv("ToxCast_MOE.csv") # Used for AER
Exponent_MOE <-read.csv("rtv_083019_2.csv") # Used for Exponent
SVMvars  <- c("logS","VAdjEq","PEOE_VSA_FPPOS","SlogP","a_nS","a_base",
"a_nN","SlogP_VSA6","logP.o.w.","PEOE_VSA_FPOL")
RFvars  <- c("logS","logP.o.w.","SlogP","PEOE_VSA_FPPOS","GCUT_SMR_0",
"BCUT_SLOGP_0","GCUT_PEOE_0","GCUT_PEOE_1","GCUT_SLOGP_0","PEOE_VSA_PPOS")
myvars <- union(SVMvars,RFvars)
library(plyr)
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input")
ToxCast_192<- read.csv("toxcast_test_192_Phase_II.csv")
#ToxCast_MOE<- read.csv("ToxCast_MOE.csv") # Used for AER
Exponent_MOE <-read.csv("rtv_083019_2.csv") # Used for Exponent
SVMvars  <- c("logS","VAdjEq","PEOE_VSA_FPPOS","SlogP","a_nS","a_base",
"a_nN","SlogP_VSA6","logP.o.w.","PEOE_VSA_FPOL")
RFvars  <- c("logS","logP.o.w.","SlogP","PEOE_VSA_FPPOS","GCUT_SMR_0",
"BCUT_SLOGP_0","GCUT_PEOE_0","GCUT_PEOE_1","GCUT_SLOGP_0","PEOE_VSA_PPOS")
myvars <- union(SVMvars,RFvars)
View(Exponent_MOE)
View(ToxCast_192)
headers <- colnames(ToxCast_192)
columns <- ncol(ToxCast_192)
rows    <- nrow(Exponent_MOE)
template <- mat.or.vec(rows, columns)
colnames(template) <- headers
dftemplate <- as.data.frame(template)
dftemplate$ID.     <- Exponent_MOE$ID.
dftemplate$SMILES  <- Exponent_MOE$SMILES
dftemplate$Fub    <- 0.0
dftemplate$CAS     <- Exponent_MOE$CAS
dftemplate$Name   <- Exponent_MOE$Name
#descriptors
dftemplate$logS           <- Exponent_MOE$logS
dftemplate$VAdjEq         <- Exponent_MOE$VAdjEq
dftemplate$PEOE_VSA_FPPOS <- Exponent_MOE$PEOE_VSA_FPPOS
dftemplate$SlogP          <- Exponent_MOE$SlogP
dftemplate$a_nS           <- Exponent_MOE$a_nS
dftemplate$a_base         <- Exponent_MOE$a_base
dftemplate$a_nN           <- Exponent_MOE$a_nN
dftemplate$SlogP_VSA6     <- Exponent_MOE$SlogP_VSA6
dftemplate$logP.o.w.      <- Exponent_MOE$logP.o.w.
dftemplate$PEOE_VSA_FPOL  <- Exponent_MOE$PEOE_VSA_FPOL
dftemplate$GCUT_SMR_0     <- Exponent_MOE$GCUT_SMR_0
dftemplate$BCUT_SLOGP_0   <- Exponent_MOE$BCUT_SLOGP_0
dftemplate$GCUT_PEOE_0    <- Exponent_MOE$GCUT_PEOE_0
dftemplate$GCUT_PEOE_1    <- Exponent_MOE$GCUT_PEOE_1
dftemplate$GCUT_SLOGP_0   <- Exponent_MOE$GCUT_SLOGP_0
dftemplate$PEOE_VSA_PPOS  <- Exponent_MOE$PEOE_VSA_PPOS
dftemplate <- rename(dftemplate, c("ID." = "ID#"))
dftemplate <- rename(dftemplate, c("logP.o.w." = "logP(o/w)"))
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input/Exponent")
write.csv(dftemplate,"toxcast_test_192_Phase_II.csv",row.names=FALSE)
library(plyr)
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input")
ToxCast_192<- read.csv("toxcast_test_192_Phase_II.csv")
#ToxCast_MOE<- read.csv("ToxCast_MOE.csv") # Used for AER
Exponent_MOE <-read.csv("rtv_083019_2.csv") # Used for Exponent
SVMvars  <- c("logS","VAdjEq","PEOE_VSA_FPPOS","SlogP","a_nS","a_base",
"a_nN","SlogP_VSA6","logP.o.w.","PEOE_VSA_FPOL")
RFvars  <- c("logS","logP.o.w.","SlogP","PEOE_VSA_FPPOS","GCUT_SMR_0",
"BCUT_SLOGP_0","GCUT_PEOE_0","GCUT_PEOE_1","GCUT_SLOGP_0","PEOE_VSA_PPOS")
myvars <- union(SVMvars,RFvars)
####
# Jump to 1, 2, or 99(QC)
##########################################################
# 1 AER
headers <- colnames(ToxCast_192)
columns <- ncol(ToxCast_192)
rows    <- nrow(ToxCast_192)
template <- mat.or.vec(rows, columns)
colnames(template) <- headers
dftemplate <- as.data.frame(template)
dftemplate$ID.     <- ToxCast_192$ID.
dftemplate$SMILES  <- ToxCast_192$SMILES
dftemplate$CAS     <- ToxCast_192$CAS
dftemplate$Name    <- ToxCast_192$Name
#descriptors
dftemplate$logS           <- ToxCast_192$logS
dftemplate$VAdjEq         <- ToxCast_192$VAdjEq
dftemplate$PEOE_VSA_FPPOS <- ToxCast_192$PEOE_VSA_FPPOS
dftemplate$SlogP          <- ToxCast_192$SlogP
dftemplate$a_nS           <- ToxCast_192$a_nS
dftemplate$a_base         <- ToxCast_192$a_base
dftemplate$a_nN           <- ToxCast_192$a_nN
dftemplate$SlogP_VSA6     <- ToxCast_192$SlogP_VSA6
dftemplate$logP.o.w.      <- ToxCast_192$logP.o.w.
dftemplate$PEOE_VSA_FPOL  <- ToxCast_192$PEOE_VSA_FPOL
dftemplate$GCUT_SMR_0     <- ToxCast_192$GCUT_SMR_0
dftemplate$BCUT_SLOGP_0   <- ToxCast_192$BCUT_SLOGP_0
dftemplate$GCUT_PEOE_0    <- ToxCast_192$GCUT_PEOE_0
dftemplate$GCUT_PEOE_1    <- ToxCast_192$GCUT_PEOE_1
dftemplate$GCUT_SLOGP_0   <- ToxCast_192$GCUT_SLOGP_0
dftemplate$PEOE_VSA_PPOS  <- ToxCast_192$PEOE_VSA_PPOS
dftemplate <- rename(dftemplate, c("ID." = "ID#"))
#dftemplate <- rename(dftemplate, c("Fu" = "Fub"))
#dftemplate <- rename(dftemplate, c("CAS." = "CAS#"))
dftemplate <- rename(dftemplate, c("logP.o.w." = "logP(o/w)"))
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input/QC")
write.csv(dftemplate,"toxcast_test_192_Phase_II.csv",row.names=FALSE)
library(plyr)
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input")
ToxCast_192<- read.csv("toxcast_test_192_Phase_II.csv")
#ToxCast_MOE<- read.csv("ToxCast_MOE.csv") # Used for AER
Exponent_MOE <-read.csv("rtv_083019_2.csv") # Used for Exponent
SVMvars  <- c("logS","VAdjEq","PEOE_VSA_FPPOS","SlogP","a_nS","a_base",
"a_nN","SlogP_VSA6","logP.o.w.","PEOE_VSA_FPOL")
RFvars  <- c("logS","logP.o.w.","SlogP","PEOE_VSA_FPPOS","GCUT_SMR_0",
"BCUT_SLOGP_0","GCUT_PEOE_0","GCUT_PEOE_1","GCUT_SLOGP_0","PEOE_VSA_PPOS")
myvars <- union(SVMvars,RFvars)
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input/QC")
library(plyr)
setwd("C:/Users/rtorne02/Desktop/Blind PP predictions/Python_Input/Input/QC")
Fup.Supp          <- read.csv("Supp_PPB_JCIM_AllData.csv")
Fup.blind         <- read.csv("ToxCast_II_BlindMethod.csv")
Fup.Blind         <- read.csv("ToxCast_II_BlindMethod.csv")
Fup.Supp             <- read.csv("Supp_PPB_JCIM_AllData.csv")
Fup.Blind.T2         <- read.csv("ToxCast_II_BlindMethod.csv")
View(Fup.Blind.T2)
View(Fup.Blind.T2)
View(Fup.Supp)
names(Fup.Supp)
View(Fup.Blind.T2)
View(Fup.Supp)
Fup.Supp.T2 <- Fup.Supp[ which(Fupp.Supp$Set=='T2' ), ]
Fup.Supp.T2 <- Fup.Supp[ which(Fup.Supp$Set=='T2' ), ]
View(Fup.Supp.T2)
View(Fup.Blind.T2)
Fup.predicts <-cbind(Fup.Supp.T2,Fup.Blind.T2)
View(Fup.predicts)
names(Fup.Blind.T2)
Fup.Blind.T2$Con_py_pred <- rowMeans(Fup.Blind.T2[c('kNN_py_pred','SVM_py_pred', 'RF_py_pred )], na.rm=TRUE)
Fup.Blind.T2$Con_py_pred <- rowMeans(Fup.Blind.T2[c('kNN_py_pred','SVM_py_pred', 'RF_py_pred' )], na.rm=TRUE)
View(Fup.Blind.T2)
Fup.Blind.T2         <- read.csv("ToxCast_II_BlindMethod.csv")
myvars <- names(Fup.Blind.T2) %in% c("X")
Fup.Blind.T2 <- Fup.Blind.T2[!myvars]
Fup.Blind.T2$Con_py_pred <- rowMeans(Fup.Blind.T2[c('kNN_py_pred','SVM_py_pred', 'RF_py_pred' )], na.rm=TRUE)
View(Fup.Supp.T2)
View(Fup.Blind.T2)
Fup.predicts <-cbind(Fup.Supp.T2,Fup.Blind.T2)
View(Fup.predicts)
corr.consensus  <- cor(Fup.predicts$Con_Pred, Fup.predicts$Con_py_pred)
corr.consensus  <- cor(Fup.predicts$Con_Pred, Fup.predicts$Con_py_pred)
corr.knn        <- cor(Fup.predicts$kNN_Pred, Fup.predicts$kNN_py_pred)
corr.svm        <- cor(Fup.predicts$SVM_Pred, Fup.predicts$SVM_py_pred)
corr.rf         <- cor(Fup.predicts$RF_Pred, Fup.predicts$RF_py_pred)
save.image(file="QC.RData")
